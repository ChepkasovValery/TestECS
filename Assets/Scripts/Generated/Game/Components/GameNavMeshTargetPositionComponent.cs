//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public NavMeshTargetPositionComponent navMeshTargetPosition { get { return (NavMeshTargetPositionComponent)GetComponent(GameComponentsLookup.NavMeshTargetPosition); } }
    public bool hasNavMeshTargetPosition { get { return HasComponent(GameComponentsLookup.NavMeshTargetPosition); } }

    public void AddNavMeshTargetPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.NavMeshTargetPosition;
        var component = (NavMeshTargetPositionComponent)CreateComponent(index, typeof(NavMeshTargetPositionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceNavMeshTargetPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.NavMeshTargetPosition;
        var component = (NavMeshTargetPositionComponent)CreateComponent(index, typeof(NavMeshTargetPositionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveNavMeshTargetPosition() {
        RemoveComponent(GameComponentsLookup.NavMeshTargetPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNavMeshTargetPosition;

    public static Entitas.IMatcher<GameEntity> NavMeshTargetPosition {
        get {
            if (_matcherNavMeshTargetPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NavMeshTargetPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNavMeshTargetPosition = matcher;
            }

            return _matcherNavMeshTargetPosition;
        }
    }
}
